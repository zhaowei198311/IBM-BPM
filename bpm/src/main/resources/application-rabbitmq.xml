<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/rabbit 
http://www.springframework.org/schema/rabbit/spring-rabbit-1.6.xsd">

	<!-- 加载数据库配置文件 -->
	<context:property-placeholder location="classpath:desmartbpm.properties" ignore-unresolvable="true" />

	<!--配置connection-factory，指定连接rabbit server参数 -->
    <rabbit:connection-factory id="connectionFactory" username="${rabbitmq.username}" password="${rabbitmq.password}" host="${rabbitmq.host}" port="${rabbitmq.port}" virtual-host="${rabbitmq.virtual.host}" />
    <!-- <rabbit:connection-factory id="connectionFactory" username="guest" password="guest" host="localhost" port="5672" virtual-host="/" /> --><!-- virtual-host="/"  -->

	<!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
	<rabbit:admin id="connectAdmin" connection-factory="connectionFactory" />

    <!--定义rabbit template用于数据的接收和发送 -->
	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory"  exchange="exchangeTest" message-converter="jsonMessageConverter" /><!--  -->

    <!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />  
    <!-- <bean id="jsonMessageConverter"  class="com.bpm.rabbitmq.message.FastJsonMessageConverter"></bean> -->   
    
	<!--定义queue -->
	<!-- durable: 是否持久化, exclusive: 仅创建者可以使用的私有队列，断开后自动删除 ,auto-delete: 当所有消费端连接断开后，是否自动删除队列 -->
	<rabbit:queue id="queueTest" name="queueTest" durable="true" auto-delete="false" exclusive="false" declared-by="connectAdmin" />

	<!-- 定义direct exchange，绑定queueTest -->
	<!-- 交换机定义 -->
	<!-- 交换机：一个交换机可以绑定多个队列，一个队列也可以绑定到多个交换机上。 如果没有队列绑定到交换机上，则发送到该交换机上的信息则会丢失。 
		direct模式:消息与一个特定的路由器完全匹配，才会转发 topic模式:按规则转发消息，最灵活 -->
	<rabbit:direct-exchange name="exchangeTest" durable="true" auto-delete="false" declared-by="connectAdmin" >
		<rabbit:bindings>
			<rabbit:binding queue="queueTest" key="queueTestKey"></rabbit:binding>
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<!-- 消息接收者 -->
	<bean id="mqConsumer" class="com.desmart.desmartbpm.mq.rabbit.MQConsumer"></bean>

	<!-- queue litener 观察监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
	<rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
		<rabbit:listener queues="queueTest" ref="mqConsumer" />
	</rabbit:listener-container>

</beans>