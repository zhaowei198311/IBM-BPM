<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.desmart.desmartsystem.dao.SysTeamMemberMapper" >
  <resultMap id="BaseResultMap" type="com.desmart.desmartsystem.entity.SysTeamMember" >
    <id column="MEMBER_UID" property="memberUid" jdbcType="VARCHAR" />
    <result column="TEAM_UID" property="teamUid" jdbcType="VARCHAR" />
    <result column="USER_UID" property="userUid" jdbcType="VARCHAR" />
    <result column="MEMBER_TYPE" property="memberType" jdbcType="VARCHAR" />
    <result column="ORDER_INDEX" property="orderIndex" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    MEMBER_UID, TEAM_UID, USER_UID, MEMBER_TYPE, ORDER_INDEX
  </sql>
  
  <sql id="SelectAll_Column_List" >
    tm.MEMBER_UID, tm.TEAM_UID, tm.USER_UID, tm.MEMBER_TYPE, tm.ORDER_INDEX,r.ROLE_NAME
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SYS_TEAM_MEMBER
    where MEMBER_UID = #{memberUid,jdbcType=VARCHAR}
  </select>
  
  <resultMap id="SelectAllResultMap" type="com.desmart.desmartsystem.entity.SysTeamMember" >
    <id column="MEMBER_UID" property="memberUid" jdbcType="VARCHAR" />
    <result column="TEAM_UID" property="teamUid" jdbcType="VARCHAR" />
    <result column="USER_UID" property="userUid" jdbcType="VARCHAR" />
    <result column="MEMBER_TYPE" property="memberType" jdbcType="VARCHAR" />
    <result column="ORDER_INDEX" property="orderIndex" jdbcType="DECIMAL" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
  </resultMap>
  
   <select id="selectAll" parameterType="com.desmart.desmartsystem.entity.SysTeamMember"  resultMap="SelectAllResultMap">
 		select <include refid="SelectAll_Column_List" /> from SYS_TEAM_MEMBER tm left join sys_role r on tm.USER_UID=r.ROLE_UID where 1=1
      	<if test="teamUid != null" >
		    and tm.TEAM_UID=#{teamUid}
		</if>
		<if test="memberType != null" >
			and tm.MEMBER_TYPE=#{memberType}
		</if>
		<if test="userUid != null" >
			and tm.USER_UID=#{userUid}
		</if>
  </select>
  
  <select id="selectTeamUser" parameterType="com.desmart.desmartsystem.entity.SysTeamMember"  resultType="com.desmart.desmartsystem.entity.SysTeamMember" >
		SELECT TEAM_UID teamUid,listagg(USER_UID,';') within group(order by USER_UID) userUid,listagg(USER_NAME,';') within group(order by USER_UID) userName FROM(
		SELECT teamuser.TEAM_UID,teamuser.USER_UID,teamuser.USER_NAME FROM (
		SELECT  tm.TEAM_UID,u.USER_UID,u.USER_NAME from(SELECT * FROM SYS_TEAM_MEMBER WHERE MEMBER_TYPE='role') tm LEFT JOIN SYS_ROLE_USER ru on tm.USER_UID =ru.ROLE_UID LEFT JOIN SYS_USER u on ru.USER_UID=u.USER_UID 
		union all
		SELECT tm.TEAM_UID,u.USER_UID,u.USER_NAME from(SELECT * FROM SYS_TEAM_MEMBER WHERE MEMBER_TYPE='user') tm LEFT JOIN SYS_USER u  on tm.USER_UID=u.USER_UID
		) teamuser LEFT JOIN SYS_USER_DEPARTMENT ud on teamuser.USER_UID=ud.USER_UID  
		<where>
		<if test=" sysDepartmentList != null and sysDepartmentList.size() >0 ">
  			and 
  			<foreach collection="sysDepartmentList" item="sysDepartment" open="(" separator="or" close=")">
  		      depart_uid = #{sysDepartment.departUid}
  		     </foreach>
  		</if>
		<if test="companyCode!=null">
			and (company_code = #{companyCode} or company_code = '1000' )
		</if>
		</where>
		) team  
		<where>
		<if test=" teamUidList != null and teamUidList.size() > 0 ">
		and
		<foreach collection="teamUidList" item = "teamUid" open="(" separator="or" close=")">
			team.TEAM_UID = #{teamUid}
		</foreach>
		</if>
		</where>
		 group by team.team_uid
		
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from SYS_TEAM_MEMBER
    where MEMBER_UID = #{memberUid,jdbcType=VARCHAR}
  </delete>
  
  <delete id="delete" parameterType="com.desmart.desmartsystem.entity.SysTeamMember" >
    delete from SYS_TEAM_MEMBER
    where TEAM_UID = #{teamUid,jdbcType=VARCHAR} and MEMBER_TYPE=#{memberType}
  </delete>
  
  <insert id="insert" parameterType="com.desmart.desmartsystem.entity.SysTeamMember" >
    insert into SYS_TEAM_MEMBER (MEMBER_UID, TEAM_UID, USER_UID, 
      MEMBER_TYPE, ORDER_INDEX)
    values (#{memberUid,jdbcType=VARCHAR}, #{teamUid,jdbcType=VARCHAR}, #{userUid,jdbcType=VARCHAR}, 
      #{memberType,jdbcType=VARCHAR}, #{orderIndex,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.desmart.desmartsystem.entity.SysTeamMember" >
    insert into SYS_TEAM_MEMBER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberUid != null" >
        MEMBER_UID,
      </if>
      <if test="teamUid != null" >
        TEAM_UID,
      </if>
      <if test="userUid != null" >
        USER_UID,
      </if>
      <if test="memberType != null" >
        MEMBER_TYPE,
      </if>
      <if test="orderIndex != null" >
        ORDER_INDEX,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberUid != null" >
        #{memberUid,jdbcType=VARCHAR},
      </if>
      <if test="teamUid != null" >
        #{teamUid,jdbcType=VARCHAR},
      </if>
      <if test="userUid != null" >
        #{userUid,jdbcType=VARCHAR},
      </if>
      <if test="memberType != null" >
        #{memberType,jdbcType=DECIMAL},
      </if>
      <if test="orderIndex != null" >
        #{orderIndex,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.desmart.desmartsystem.entity.SysTeamMember" >
    update SYS_TEAM_MEMBER
    <set >
      <if test="teamUid != null" >
        TEAM_UID = #{teamUid,jdbcType=VARCHAR},
      </if>
      <if test="userUid != null" >
        USER_UID = #{userUid,jdbcType=VARCHAR},
      </if>
      <if test="memberType != null" >
        MEMBER_TYPE = #{memberType,jdbcType=VARCHAR},
      </if>
      <if test="orderIndex != null" >
        ORDER_INDEX = #{orderIndex,jdbcType=DECIMAL},
      </if>
    </set>
    where MEMBER_UID = #{memberUid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.desmart.desmartsystem.entity.SysTeamMember" >
    update SYS_TEAM_MEMBER
    set TEAM_UID = #{teamUid,jdbcType=VARCHAR},
      USER_UID = #{userUid,jdbcType=VARCHAR},
      MEMBER_TYPE = #{memberType,jdbcType=VARCHAR},
      ORDER_INDEX = #{orderIndex,jdbcType=DECIMAL}
    where MEMBER_UID = #{memberUid,jdbcType=VARCHAR}
  </update>
</mapper>