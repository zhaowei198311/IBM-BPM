<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.desmart.desmartbpm.dao.DatRuleConditionMapper" >
   
   <insert id="inserToDatRuleCondition" parameterType="com.desmart.desmartbpm.entity.DatRuleCondition">
   	INSERT INTO DAT_RULE_CONDITION (CONDITION_ID, CONDITION_GROUP_NAME, CONDITION_OPERATOR
	, CONDITION_OPERATOR_NAME, CONDITION_TYPE, CREATE_TIME, CREATOR, LEFT_NAME, LEFT_VALUE, LEFT_VALUE_TYPE
	, RETURN_TYPE, RIGHT_VALUE, RIGHT_VALUE_TYPE, RULE_ID, RULE_STATUS, RULE_VERSION, SORT_NUM, VALUE_OPERATOR) 
	SELECT A.*
    FROM (
	<foreach collection="datRuleCondition" item="emp" separator="UNION ALL">  
	SELECT 
	 #{emp.conditionId} conditionId, #{emp.conditionGroupName} conditionGroupName, #{emp.conditionOperator} conditionOperator, #{emp.conditionOperatorName} conditionOperatorName
	, #{emp.conditionType} conditionType, #{emp.createTime} createTime, #{emp.creator} creator, #{emp.leftName} leftName, #{emp.leftValue} leftValue
	, #{emp.leftValueType}, #{emp.returnType}, #{emp.rightValue}, #{emp.rightValueType}
	, #{emp.ruleId} ruleId, #{emp.ruleStatus} ruleStatus, #{emp.ruleVersion} ruleVersion, #{emp.sortNum} sortNum, #{emp.valueOperator} valueOperator
	FROM dual
	</foreach>
	)A
   </insert>
  
   <select id="getDatruleConditionByRuleId" parameterType="map"
    resultType="com.desmart.desmartbpm.entity.DatRuleCondition">
    SELECT drc.*,dr.rule_Name as ruleName FROM 
    DAT_RULE_CONDITION drc left join DAT_RULE dr
    on drc.rule_id = dr.rule_id where drc.rule_id = #{ruleId}
    order by CONDITION_GROUP_NAME
   </select>
   
   <select id="getDatruleConditionInRuleId" parameterType="map"
    resultType="com.desmart.desmartbpm.entity.DatRuleCondition">
    select drc.* from dat_rule_condition drc left join dat_rule dr
    on drc.rule_id = dr.rule_id where dr.rule_name like CONCAT(CONCAT('%',#{activityId}),'%')
    </select>
    
    <delete id="deleteDatRuleCondition" parameterType="com.desmart.desmartbpm.entity.DatRule">
    DELETE FROM DAT_RULE_CONDITION WHERE rule_id = #{ruleId}
    </delete>
    
    <select id="loadDatruleConditionInRuleId" parameterType="map"
    resultType="com.desmart.desmartbpm.entity.DatRuleCondition">
    select drc.CONDITION_ID, drc.CONDITION_GROUP_NAME
    ,case when 1=1 then  CONCAT(CONCAT(CONDITION_OPERATOR,':'),CONDITION_OPERATOR_NAME) end as CONDITION_OPERATOR
    , drc.CONDITION_TYPE, drc.CREATE_TIME, drc.CREATOR, drc.LEFT_NAME, drc.LEFT_VALUE, drc.LEFT_VALUE_TYPE, drc.RETURN_TYPE, drc.RIGHT_VALUE
    , drc.RIGHT_VALUE_TYPE, drc.RULE_ID, drc.RULE_STATUS, drc.RULE_VERSION, drc.SORT_NUM, drc.VALUE_OPERATOR
    ,dr.rule_name as result from dat_rule_condition drc
    left join dat_rule dr on drc.rule_id =dr.rule_id
    where dr.rule_name like CONCAT(CONCAT('%',#{activityId}),'%')
    </select>
    
    <insert id="insert" parameterType="com.desmart.desmartbpm.entity.DatRuleCondition">
    INSERT INTO DAT_RULE_CONDITION (CONDITION_ID, CONDITION_GROUP_NAME, CONDITION_OPERATOR
	, CONDITION_OPERATOR_NAME, CONDITION_TYPE, CREATE_TIME, CREATOR, LEFT_NAME, LEFT_VALUE, LEFT_VALUE_TYPE
	, RETURN_TYPE, RIGHT_VALUE, RIGHT_VALUE_TYPE, RULE_ID, RULE_STATUS, RULE_VERSION, SORT_NUM, VALUE_OPERATOR)
	values(
	 #{conditionId}, #{conditionGroupName}
	 , #{conditionOperator},#{conditionOperatorName}
	 , #{conditionType}, #{createTime}, #{creator}
	 , #{leftName}, #{leftValue}
	 , #{leftValueType}, #{returnType}
	 , #{rightValue}, #{rightValueType}
	 , #{ruleId}, #{ruleStatus}, #{ruleVersion}
	 , #{sortNum}, #{valueOperator}
	)
    </insert>
	
	<select id="getDatruleConditionByActivityId" parameterType="map"
    resultType="com.desmart.desmartbpm.entity.DatRuleCondition">
    SELECT drc.*,dr.rule_name FROM DAT_RULE_CONDITION drc left join dat_rule dr on drc.rule_id = dr.rule_id
	left join dh_gateway_line dgl on dr.rule_id = dgl.rule_id
	where dgl.activity_id = #{activityId}
	order by drc.rule_id,drc.CONDITION_GROUP_NAME
    </select>
    
    <delete id="batchDelete" parameterType="java.util.List">
  		delete from dat_rule_condition
 		 <where>
  		<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">     
  			condition_id=#{item.conditionId}
   	 	</foreach>
 	 </where>
 	</delete>
 	
 	<delete id="deleteByRuleIds" parameterType="list">
 		DELETE FROM DAT_RULE_CONDITION
 		<where>
 			RULE_ID IN
 			<foreach collection="list" item="item" open="(" separator="," close=")">
 				#{item}
 			</foreach>
 		</where>
 	</delete>
 	
 	<select id="listByRuleIds" parameterType="list" resultType="com.desmart.desmartbpm.entity.DatRuleCondition">
 		SELECT * FROM DAT_RULE_CONDITION
 		<where>
 			RULE_ID IN
 			<foreach collection="list" item="item" open="(" separator="," close=")">
 				#{item}
 			</foreach>
 		</where>
 	</select>
 	
 	<update id="update" parameterType="com.desmart.desmartbpm.entity.DatRuleCondition">
 	UPDATE DAT_RULE_CONDITION 
	<set> 
	<if test="conditionGroupName != null and conditionGroupName!='' ">
		CONDITION_GROUP_NAME = #{conditionGroupName}, 
	</if>
	<if test="conditionOperator != null and conditionOperator !='' ">
		CONDITION_OPERATOR = #{conditionOperator}, 
	</if>
	<if test="conditionOperatorName != null and conditionOperatorName !='' ">
		CONDITION_OPERATOR_NAME = #{conditionOperatorName}, 
	</if>
	<if test="conditionType != null and conditionType !='' ">
		CONDITION_TYPE = #{conditionType}, 
	</if>
	<if test="createTime != null and createTime !='' ">
		CREATE_TIME = #{createTime}, 
	</if>
	<if test="creator != null and creator != '' ">
		CREATOR = #{creator}, 
	</if>
	<if test="leftName != null and leftName != '' ">
		LEFT_NAME = #{leftName}, 
	</if>
	<if test="leftValue != null and leftValue != '' ">
		LEFT_VALUE = #{leftValue}, 
	</if>
	<if test="leftValueType != null and leftValueType != '' ">
		LEFT_VALUE_TYPE = #{leftValueType}, 
	</if>
	<if test="returnType != null and returnType != '' ">
		RETURN_TYPE = #{returnType}, 
	</if>
	<if test="rightValue != null and rightValue != '' ">
		RIGHT_VALUE = #{rightValue}, 
	</if>
	<if test="rightValueType != null and rightValueType != '' ">
		RIGHT_VALUE_TYPE = #{rightValueType}, 
	</if>
	<if test="ruleId != null and ruleId != '' ">
		RULE_ID = #{ruleId}, 
	</if>
	<if test="ruleStatus != null and ruleStatus != '' ">
		RULE_STATUS = #{ruleStatus}, 
	</if>
	<if test="ruleVersion != null ">
		RULE_VERSION = #{ruleVersion},
	</if>
	<if test="sortNum != null"> 
		SORT_NUM = #{sortNum}, 
	</if>
	<if test="valueOperator != null and valueOperator != '' ">
		VALUE_OPERATOR = #{valueOperator}, 
	</if>
 	</set>
		WHERE CONDITION_ID = #{conditionId}
 	</update>
</mapper>